{"ast":null,"code":"var _jsxFileName = \"/home/mamoun/Desktop/Gaza Sky Geeks/react_traning/tictactoereact/src/component/cell/cell.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './cell.css';\nimport evaluate from '../../component/utils/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cell(props) {\n  _s2();\n  var _s = $RefreshSig$();\n  const [cells, setCells] = useState(Array(9).fill(''));\n  const [winner, setWinner] = useState(null);\n  const cellClicked = index => {\n    if (cells[index] !== \"\") return;\n    const newCell = [...cells];\n    newCell[index] = props.turn;\n    setCells(newCell);\n    props.setTurn(props.turn === \"X\" ? \"O\" : \"X\");\n    const result = evaluate(newCells);\n    if (result) {\n      setWinner(result);\n      if (result === \"X\") props.setWins(wins => {\n        return {\n          ...wins,\n          xWins: wins.xWins + 1\n        };\n      });\n      // Just like this example setCount(count => { return count + 1 })\n      else if (result === \"O\") props.setWins(wins => {\n        return {\n          ...wins,\n          oWins: wins.oWins + 1\n        };\n      });\n    }\n  };\n  const reset = () => {\n    _s();\n    const [cells, setCells] = useState(Array(9).fill(''));\n  };\n  _s(reset, \"n+QjpT76+WXTerCUU1k5fEI6jUA=\");\n  const newCells = [...cells];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cells\",\n    children: [cells.map((box, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `cell ${box}`,\n      onClick: () => {\n        cellClicked(index);\n      },\n      children: box\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)), winner !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [winner === 'draw' ? \"Draw :-(\" : \"Winner is: \" + winner, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: reset,\n        children: \"Restart!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s2(Cell, \"UsXH4ZqpCzLQ05HbPHEQcJmYxLI=\");\n_c = Cell;\nexport default Cell;\nvar _c;\n$RefreshReg$(_c, \"Cell\");","map":{"version":3,"names":["React","useState","evaluate","Cell","props","cells","setCells","Array","fill","winner","setWinner","cellClicked","index","newCell","turn","setTurn","result","newCells","setWins","wins","xWins","oWins","reset","map","box"],"sources":["/home/mamoun/Desktop/Gaza Sky Geeks/react_traning/tictactoereact/src/component/cell/cell.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport './cell.css';\nimport evaluate from '../../component/utils/utils';\nfunction Cell(props) {\n    const [cells, setCells] = useState(Array(9).fill(''));\n    const [winner, setWinner] = useState(null);\n    const cellClicked = (index) => {\n        if (cells[index] !== \"\") return;\n        const newCell = [...cells];\n        newCell[index] = props.turn;\n        setCells(newCell);\n        props.setTurn(props.turn === \"X\" ? \"O\" : \"X\");\n        const result = evaluate(newCells);\n        if (result) {\n            setWinner(result);\n            if (result === \"X\")\n                props.setWins(wins => { return { ...wins, xWins: wins.xWins + 1 } });\n            // Just like this example setCount(count => { return count + 1 })\n            else if (result === \"O\")\n                props.setWins(wins => { return { ...wins, oWins: wins.oWins + 1 } });\n\n        }\n\n\n    }\n        const reset = () => {\n            const [cells, setCells] = useState(Array(9).fill(''));\n\n        }\n    const newCells = [...cells];\n    return (\n        <div className='cells'>\n            {cells.map((box, index) =>\n                <div key={index}\n                    className={`cell ${box}`}\n                    onClick={() => { cellClicked(index) }}\n                >\n                    {box}    \n                </div>)}\n        {\n                winner !== null && <div className=\"result\">\n                    {winner === 'draw' ? \"Draw :-(\" : \"Winner is: \" + winner}\n                    <br /> <button onClick={reset}>Restart!</button>\n                </div>\n            }\n\n        </div>\n    )\n}\n\nexport default Cell"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AACnB,OAAOC,QAAQ,MAAM,6BAA6B;AAAC;AACnD,SAASC,IAAI,CAACC,KAAK,EAAE;EAAA;EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAACM,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;EACrD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAMU,WAAW,GAAIC,KAAK,IAAK;IAC3B,IAAIP,KAAK,CAACO,KAAK,CAAC,KAAK,EAAE,EAAE;IACzB,MAAMC,OAAO,GAAG,CAAC,GAAGR,KAAK,CAAC;IAC1BQ,OAAO,CAACD,KAAK,CAAC,GAAGR,KAAK,CAACU,IAAI;IAC3BR,QAAQ,CAACO,OAAO,CAAC;IACjBT,KAAK,CAACW,OAAO,CAACX,KAAK,CAACU,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAC7C,MAAME,MAAM,GAAGd,QAAQ,CAACe,QAAQ,CAAC;IACjC,IAAID,MAAM,EAAE;MACRN,SAAS,CAACM,MAAM,CAAC;MACjB,IAAIA,MAAM,KAAK,GAAG,EACdZ,KAAK,CAACc,OAAO,CAACC,IAAI,IAAI;QAAE,OAAO;UAAE,GAAGA,IAAI;UAAEC,KAAK,EAAED,IAAI,CAACC,KAAK,GAAG;QAAE,CAAC;MAAC,CAAC,CAAC;MACxE;MAAA,KACK,IAAIJ,MAAM,KAAK,GAAG,EACnBZ,KAAK,CAACc,OAAO,CAACC,IAAI,IAAI;QAAE,OAAO;UAAE,GAAGA,IAAI;UAAEE,KAAK,EAAEF,IAAI,CAACE,KAAK,GAAG;QAAE,CAAC;MAAC,CAAC,CAAC;IAE5E;EAGJ,CAAC;EACG,MAAMC,KAAK,GAAG,MAAM;IAAA;IAChB,MAAM,CAACjB,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAACM,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;EAEzD,CAAC;EAAA,GAHKc,KAAK;EAIf,MAAML,QAAQ,GAAG,CAAC,GAAGZ,KAAK,CAAC;EAC3B,oBACI;IAAK,SAAS,EAAC,OAAO;IAAA,WACjBA,KAAK,CAACkB,GAAG,CAAC,CAACC,GAAG,EAAEZ,KAAK,kBAClB;MACI,SAAS,EAAG,QAAOY,GAAI,EAAE;MACzB,OAAO,EAAE,MAAM;QAAEb,WAAW,CAACC,KAAK,CAAC;MAAC,CAAE;MAAA,UAErCY;IAAG,GAJEZ,KAAK;MAAA;MAAA;MAAA;IAAA,QAKT,CAAC,EAEPH,MAAM,KAAK,IAAI,iBAAI;MAAK,SAAS,EAAC,QAAQ;MAAA,WACrCA,MAAM,KAAK,MAAM,GAAG,UAAU,GAAG,aAAa,GAAGA,MAAM,eACxD;QAAA;QAAA;QAAA;MAAA,QAAM,oBAAC;QAAQ,OAAO,EAAEa,KAAM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9C;EAAA;IAAA;IAAA;IAAA;EAAA,QAGR;AAEd;AAAC,IA7CQnB,IAAI;AAAA,KAAJA,IAAI;AA+Cb,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module"}