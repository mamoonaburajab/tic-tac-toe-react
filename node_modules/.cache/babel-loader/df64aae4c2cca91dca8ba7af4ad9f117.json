{"ast":null,"code":"const evaluate = cells => {\n  // Winner in rows\n  if (cells[0] !== \"\" && cells[0] === cells[1] && cells[1] === cells[2]) {\n    return cells[0];\n  }\n  if (cells[3] !== \"\" && cells[3] === cells[4] && cells[4] === cells[5]) {\n    return cells[3];\n  }\n  if (cells[6] !== \"\" && cells[6] === cells[7] && cells[7] === cells[8]) {\n    return cells[6];\n  }\n\n  // winner in columns\n  if (cells[0] !== \"\" && cells[0] === cells[3] && cells[3] === cells[6]) {\n    return cells[0];\n  }\n  if (cells[1] !== \"\" && cells[1] === cells[4] && cells[4] === cells[7]) {\n    return cells[1];\n  }\n  if (cells[2] !== \"\" && cells[2] === cells[5] && cells[5] === cells[8]) {\n    return cells[2];\n  }\n\n  // winner in diagnoal\n  if (cells[0] !== \"\" && cells[0] === cells[4] && cells[4] === cells[8]) {\n    return cells[0];\n  }\n  if (cells[2] !== \"\" && cells[2] === cells[4] && cells[4] === cells[6]) {\n    return cells[2];\n  }\n\n  // if there is an empty cell, then return no winner yet\n  for (let i = 0; i < cells.length; i++) {\n    if (cells[i] === \"\") return undefined;\n  }\n  return \"draw\";\n};\nexport default evaluate;","map":{"version":3,"names":["evaluate","cells","i","length","undefined"],"sources":["/home/mamoon/Desktop/GSG/react_traning/tictactoereact/tictactoereact/src/component/utils/utils.js"],"sourcesContent":["const evaluate = (cells) => {\n    // Winner in rows\n    if (cells[0] !== \"\" && cells[0] === cells[1] && cells[1] === cells[2]) {\n        return cells[0];\n    }\n    if (cells[3] !== \"\" && cells[3] === cells[4] && cells[4] === cells[5]) {\n        return cells[3];\n    }\n    if (cells[6] !== \"\" && cells[6] === cells[7] && cells[7] === cells[8]) {\n        return cells[6];\n    }\n\n    // winner in columns\n    if (cells[0] !== \"\" && cells[0] === cells[3] && cells[3] === cells[6]) {\n        return cells[0];\n    }\n    if (cells[1] !== \"\" && cells[1] === cells[4] && cells[4] === cells[7]) {\n        return cells[1];\n    }\n    if (cells[2] !== \"\" && cells[2] === cells[5] && cells[5] === cells[8]) {\n        return cells[2];\n    }\n\n    // winner in diagnoal\n    if (cells[0] !== \"\" && cells[0] === cells[4] && cells[4] === cells[8]) {\n        return cells[0];\n    }\n    if (cells[2] !== \"\" && cells[2] === cells[4] && cells[4] === cells[6]) {\n        return cells[2];\n    }\n\n    // if there is an empty cell, then return no winner yet\n    for (let i = 0; i < cells.length; i++) {\n        if (cells[i] === \"\") return undefined;\n    }\n\n    return \"draw\";\n}\n\nexport default evaluate;\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAIC,KAAK,IAAK;EACxB;EACA,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAKA,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAKA,KAAK,CAAC,CAAC,CAAC,EAAE;IACnE,OAAOA,KAAK,CAAC,CAAC,CAAC;EACnB;EACA,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAKA,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAKA,KAAK,CAAC,CAAC,CAAC,EAAE;IACnE,OAAOA,KAAK,CAAC,CAAC,CAAC;EACnB;EACA,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAKA,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAKA,KAAK,CAAC,CAAC,CAAC,EAAE;IACnE,OAAOA,KAAK,CAAC,CAAC,CAAC;EACnB;;EAEA;EACA,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAKA,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAKA,KAAK,CAAC,CAAC,CAAC,EAAE;IACnE,OAAOA,KAAK,CAAC,CAAC,CAAC;EACnB;EACA,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAKA,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAKA,KAAK,CAAC,CAAC,CAAC,EAAE;IACnE,OAAOA,KAAK,CAAC,CAAC,CAAC;EACnB;EACA,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAKA,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAKA,KAAK,CAAC,CAAC,CAAC,EAAE;IACnE,OAAOA,KAAK,CAAC,CAAC,CAAC;EACnB;;EAEA;EACA,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAKA,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAKA,KAAK,CAAC,CAAC,CAAC,EAAE;IACnE,OAAOA,KAAK,CAAC,CAAC,CAAC;EACnB;EACA,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAKA,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAKA,KAAK,CAAC,CAAC,CAAC,EAAE;IACnE,OAAOA,KAAK,CAAC,CAAC,CAAC;EACnB;;EAEA;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;IACnC,IAAID,KAAK,CAACC,CAAC,CAAC,KAAK,EAAE,EAAE,OAAOE,SAAS;EACzC;EAEA,OAAO,MAAM;AACjB,CAAC;AAED,eAAeJ,QAAQ"},"metadata":{},"sourceType":"module"}